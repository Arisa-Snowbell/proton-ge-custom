From 3b81b6de8ad0e4aea2b85af651894ab9dfcde839 Mon Sep 17 00:00:00 2001
From: Etaash Mathamsetty
 <45927311+Etaash-mathamsetty@users.noreply.github.com>
Date: Thu, 15 May 2025 10:12:42 -0400
Subject: [PATCH 2/9] HACK: kernelbase: Add Wayland specific workarounds.

---
 dlls/kernelbase/process.c | 39 +++++++++++++++++++++++++++++++++------
 1 file changed, 33 insertions(+), 6 deletions(-)

diff --git a/dlls/kernelbase/process.c b/dlls/kernelbase/process.c
index 692d859a28d..80541f452f2 100644
--- a/dlls/kernelbase/process.c
+++ b/dlls/kernelbase/process.c
@@ -584,13 +584,14 @@ static int battleye_launcher_redirect_hack( const WCHAR *app_name, WCHAR *new_na
 
 static const WCHAR *hack_append_command_line( const WCHAR *cmd )
 {
-    static const struct
+    struct option
     {
         const WCHAR *exe_name;
         const WCHAR *append;
         const char *steamgameid;
-    }
-    options[] =
+    };
+
+    static const struct option options[] =
     {
         {L"Willful.exe", L" --disable_direct_composition=1"},
         {L"Banyu Lintar Angin - Little Storm -.exe", L" --disable_direct_composition=1"},
@@ -607,6 +608,7 @@ static const WCHAR *hack_append_command_line( const WCHAR *cmd )
         {L"Aisling and the Tavern of Elves\\nw.exe", L" --use-gl=swiftshader"},
         {L"Snares of Ruin 2\\SoR2.exe", L" --use-gl=swiftshader"},
         {L"\\EOSOverlayRenderer-Win64-Shipping.exe", L" --use-gl=swiftshader --in-process-gpu"},
+        {L"\\EOSOverlayRenderer-Win32-Shipping.exe", L" --use-gl=swiftshader --in-process-gpu"}, /* Among Us EGS */
         {L"\\EpicOnlineServicesUIHelper", L" --use-angle=vulkan"},
         {L"OlympiaRising.exe", L" --use-gl=swiftshader"},
         {L"nw.exe.exe", L" --use-angle=d3d9"},
@@ -620,8 +622,17 @@ static const WCHAR *hack_append_command_line( const WCHAR *cmd )
         {L"UnrealCEFSubProcess.exe", L" --use-angle=d3d9", "2684500"},
         {L"\\EACefSubProcess.exe", L" --use-angle=vulkan"},
     };
+
+    /* Generally just workarounds for winewayland not supporting cross process rendering (yet) */
+    static const struct option wayland_options[] = {
+        { L"launcher_epic.exe", L" --in-process-gpu"} /* ZZZ EGS */
+    };
+
     unsigned int i;
-    char sgi[64];
+    char sgi[64] = {0};
+    char wayland_hack_enabled[64] = {0};
+
+    GetEnvironmentVariableA("SteamGameId", sgi, sizeof(sgi));
 
     if (!cmd) return NULL;
 
@@ -629,13 +640,29 @@ static const WCHAR *hack_append_command_line( const WCHAR *cmd )
     {
         if (wcsstr( cmd, options[i].exe_name ))
         {
-            if (options[i].steamgameid && !(GetEnvironmentVariableA( "SteamGameId", sgi, sizeof(sgi) )
-                && !strcmp( sgi, options[i].steamgameid )))
+            if (options[i].steamgameid && strcmp( sgi, options[i].steamgameid ))
                 continue;
             FIXME( "HACK: appending %s to command line.\n", debugstr_w(options[i].append) );
             return options[i].append;
         }
     }
+
+    GetEnvironmentVariableA("WINE_WAYLAND_HACKS",
+            wayland_hack_enabled, sizeof(wayland_hack_enabled));
+
+    if (wayland_hack_enabled[0] != '1') return NULL;
+
+    for (i = 0; i < ARRAY_SIZE(wayland_options); ++i)
+    {
+        if (wcsstr( cmd, wayland_options[i].exe_name ))
+        {
+            if (wayland_options[i].steamgameid && strcmp( sgi, wayland_options[i].steamgameid ))
+                continue;
+            FIXME( "HACK: appending %s to command line.\n", debugstr_w(wayland_options[i].append) );
+            return wayland_options[i].append;
+        }
+    }
+
     return NULL;
 }
 
-- 
2.49.0

